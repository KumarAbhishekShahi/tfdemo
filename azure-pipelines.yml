# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'
  name: Azure Pipelines

steps:
- checkout: self
  displayName: "Checkout Pipeline"

- task: CopyFiles@2
  displayName: 'Copy Files to Stage Directory'
  inputs:
    SourceFolder: config
    Contents: '**.tf'
    TargetFolder: '$(build.artifactstagingdirectory)/Terraform'

- task: PublishBuildArtifacts@1
  displayName: "Publish Build Artifacts"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    artifactName: drop
    downloadPath: $(System.DefaultWorkingDirectory)

- task: TerraformInstaller@0
  displayName: "Terraform Install"
  inputs:
    terraformVersion: '0.12.25'

- task: AzureCLI@2
  displayName: "Terraform init"
  inputs:
    azureSubscription: 'Azure for Students (c4b8ac58-e4e0-438d-a04e-30604e28751c)'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      terraform init
    addSpnToEnvironment: true
    workingDirectory: 'D:\a\1\s\drop\Terraform\'

- task: AzureCLI@2
  displayName: "Terraform Plan"
  inputs:
    azureSubscription: 'Azure for Students (c4b8ac58-e4e0-438d-a04e-30604e28751c)'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      terraform plan
    addSpnToEnvironment: true
    workingDirectory: 'D:\a\1\s\drop\Terraform\'

- task: AzureCLI@2
  displayName: "Terraform Apply"
  inputs:
    azureSubscription: 'Azure for Students (c4b8ac58-e4e0-438d-a04e-30604e28751c)'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      terraform apply -auto-approve
    addSpnToEnvironment: true
    workingDirectory: 'D:\a\1\s\drop\Terraform\'
